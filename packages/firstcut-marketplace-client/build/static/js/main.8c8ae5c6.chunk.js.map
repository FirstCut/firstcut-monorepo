{"version":3,"sources":["../../firstcut-ui/lib/index.js","components/projects.jsx","components/loading.jsx","components/alert.jsx","pages/explore-marketplace.jsx","pages/contact-form.jsx","components/header.jsx","App.js","serviceWorker.js","index.js","../../firstcut-analytics/lib/index.js"],"names":["Object","defineProperty","exports","value","__webpack_require__","_semanticUiReact","keys","forEach","key","enumerable","get","ProjectCard","props","_id","title","exampleThumb","react_default","a","createElement","lib","as","Link","to","concat","style","marginBottom","src","Content","Header","color","ProjectList","cards","projects","map","project","assign","Group","centered","Loading","loading","name","Alert","header","message","_props$visible","visible","open","content","GET_PROJECT_TEMPLATES_QUERY","gql","_templateObject","ExploreMarketplacePage","react_apollo_browser_umd","query","_ref","error","data","components_loading","components_alert","paddingTop","components_projects","projectTemplates","GET_TEMPLATE_QUERY","contact_form_templateObject","ADD_REQUEST","_templateObject2","ContactFormPage","mutation","addRequest","mutationState","contact_form_ContactFormPageComponent","ContactFormPageComponent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initialState","confirm","website","company","firstName","lastName","budget","location","email","about","restoreState","setState","handleChange","e","_ref2","handleSubmit","_this$props","_this$state","state","request","objectWithoutProperties","variables","objectSpread","projectId","Analytics","trackFormSubmission","projectTitle","_this$state2","fields","_this$props2","projectProps","columnStyle","height","type","ConfirmationModal","onClick","onConfirm","stackable","reversed","Column","mobile","tablet","computer","align","Container","maxWidth","ProjectDetails","Image","minWidth","position","top","right","width","opacity","zIndex","ContactForm","fieldValues","React","PureComponent","widths","Field","Input","onChange","placeholder","required","TextArea","Button","fluid","basic","size","icon","Actions","inverted","description","visualProps","VisualComponent","exampleUrl","componentStyle","url","ContactPage","projectTemplate","left","marginLeft","marginTop","history","createBrowserHistory","listen","trackNavigationEvent","pathname","App","init","components_header","Router","Switch","Route","path","exact","component","render","match","params","contact_form","Boolean","window","hostname","client","ApolloClient","uri","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","_interopRequireDefault","initMixpanel","default","_objectWithoutProperties2","analytics","initialize","invoked","console","methods","factory","t","Array","prototype","slice","arguments","unshift","push","length","load","n","async","getElementsByTagName","parentNode","insertBefore","_loadOptions","SNIPPET_VERSION","_default","undefined","development","analyics","log","page","track","identify","group","trackError","rest","eventName","trackClickEvent"],"mappings":"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","file":"static/js/main.8c8ae5c6.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire(\"../semantic/dist/semantic.min.css\");\n\nvar _semanticUiReact = require(\"semantic-ui-react\");\n\nObject.keys(_semanticUiReact).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _semanticUiReact[key];\n    }\n  });\n});","\nimport React from 'react';\nimport { Image, Card } from 'firstcut-ui';\nimport { Link } from 'react-router-dom';\n\n/**\n * ProjectList\n *\n * Displays the list of project templates in card format\n */\n\nfunction ProjectList(props) {\n  const { projects } = props;\n  const cards = projects.map(project => (\n    <ProjectCard key={project._id} {...project} />\n  ));\n  return (\n    <Card.Group centered>\n      { cards }\n    </Card.Group>\n  );\n}\n\nfunction ProjectCard(props) {\n  const {\n    _id, title, exampleThumb,\n  } = props;\n  const itemStyle = {\n    marginBottom: '4em',\n  };\n  return (\n    <Card as={Link} to={`/contact/${_id}`} style={itemStyle}>\n      <Image src={exampleThumb} />\n      <Card.Content>\n        <Card.Header color=\"green\">\n          { title }\n        </Card.Header>\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default ProjectList;\n","\nimport React from 'react';\nimport { Icon } from 'firstcut-ui';\n\n/**\n * Loading\n *\n * Generic loading component\n */\n\nfunction Loading(props) {\n  return <Icon loading name='spinner' />;\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'firstcut-ui';\n\n/**\n * Alert\n *\n * Displays an alert to the user\n */\nfunction Alert(props) {\n  const { header, message, visible=true } = props;\n  return (<Modal open={visible} header={header} content={message}/>);\n}\n\nAlert.propTypes = {\n  message: PropTypes.string,\n  header: PropTypes.string,\n  visible: PropTypes.bool\n}\n\nexport default Alert;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Container } from 'firstcut-ui';\nimport ProjectList from '../components/projects';\nimport Loading from '../components/loading';\nimport Alert from '../components/alert';\n\n/**\n * ExploreMarketplacePage\n * \n * Queries the graphql api for project templates and displays them.\n */\n\nexport const GET_PROJECT_TEMPLATES_QUERY = gql`\n  {\n    projectTemplates {\n      title\n      description\n      exampleThumb\n      exampleUrl\n      _id\n    }\n  }\n`;\n\nconst ExploreMarketplacePage = () => (\n  <Query query={GET_PROJECT_TEMPLATES_QUERY}>\n    {({ loading, error, data }) => {\n      if (loading) return <Loading/>\n      if (error) return <Alert message={error.message} />;\n\n      return (\n        <Container style={{ paddingTop: '100px' }}>\n          <ProjectList projects={data.projectTemplates} />\n        </Container>\n      );\n    }}\n  </Query>\n);\n\nexport default ExploreMarketplacePage;\n","import React from 'react';\nimport {\n  Grid, Modal, Header, Form, Responsive, Button, Embed, Container, Image,\n} from 'firstcut-ui';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Analytics from 'firstcut-analytics';\nimport Loading from '../components/loading';\nimport Alert from '../components/alert';\n\n/**\n * ContactPage\n *\n * Displays a project template's information (description, title, example video)\n * along with a contact form.\n *\n * The contact form inserts a project request into the database via the graphql api\n * @param projectId { string } the id of the project template to display\n */\n\nexport const GET_TEMPLATE_QUERY = gql`\n  query projectTemplate($projectId: ID!) {\n    projectTemplate(_id: $projectId) {\n      title\n      description\n      exampleUrl\n      exampleThumb\n      _id\n    }\n  }\n`;\n\nfunction ContactPage(props) {\n  const { projectId } = props;\n  return (\n    <Query query={GET_TEMPLATE_QUERY} variables={{ projectId }}>\n      {({ loading, error, data }) => {\n        if (loading) return <Loading />;\n        if (error) return <Alert message={error.message} />;\n\n        return <ContactFormPage {...data.projectTemplate} />;\n      }}\n    </Query>\n  );\n}\n\nconst ADD_REQUEST = gql`\n  mutation addRequest(\n    $firstName: String!,\n    $lastName: String!,\n    $projectId: String!,\n    $email: String!,\n    $company: String,\n    $website: String,\n    $location: String,\n    $budget: String\n    $about: String\n  ) {\n    addRequest(\n      firstName: $firstName,\n      lastName: $lastName,\n      projectId: $projectId,\n      email: $email,\n      company: $company,\n      website: $website,\n      location: $location,\n      budget: $budget,\n      about: $about\n    ) {\n      _id\n    }\n  }\n`;\n\nfunction ContactFormPage(props) {\n  return (\n    <Mutation mutation={ADD_REQUEST}>\n    {(addRequest, mutationState) => (\n      <ContactFormPageComponent mutationState={mutationState} addRequest={addRequest} {...props} />\n    )}\n  </Mutation>\n  )\n}\n\nclass ContactFormPageComponent extends React.PureComponent {\n  initialState = {\n    confirm: false,\n    error: null,\n    website: '',\n    company: '',\n    firstName: '',\n    lastName: '',\n    budget: '',\n    location: '',\n    email: '',\n    about: '',\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  restoreState = ()=>  this.setState(this.initialState)\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value });\n\n  handleSubmit = () => {\n    const { addRequest, title, _id } = this.props;\n    const { confirm, error, ...request } = this.state;\n    addRequest({ variables: { ...request, projectId: _id }});\n    Analytics.trackFormSubmission({ name: 'CONTACT_FORM', projectId: _id, projectTitle: title, ...request });\n    this.setState({ confirm: true });\n  }\n\n  render() {\n    const {\n      confirm, error, ...fields\n    } = this.state;\n    const { mutationState, ...projectProps } = this.props;\n    const columnStyle = { paddingTop: '100px' };\n    return (\n      <div style={{ height: '100%' }}>\n        { mutationState.error &&\n          <Alert visible={mutationState.error} type='error' message={mutationState.error.message} />\n        }\n        <ConfirmationModal\n          open={confirm}\n          onClick={this.restoreState}\n          onConfirm={this.restoreState}\n        />\n        <Grid\n          stackable\n          style={{ height: '100%' }}\n          reversed=\"computer\"\n        >\n          <Grid.Column\n            mobile={16}\n            tablet={16}\n            computer={8}\n            style={columnStyle}\n            align=\"center\"\n          >\n            <Responsive\n              as={Container}\n              maxWidth={770}\n              style={{\n                height: '75px',\n              }}\n            />\n            <ProjectDetails {...projectProps} />\n            <Responsive\n              as={Image}\n              minWidth={1085}\n              src=\"/desktop.png\"\n              style={{\n                position: 'absolute',\n                top: 0,\n                right: 0,\n                height: '100%',\n                width: '100%',\n                opacity: 0.1,\n                zIndex: -1000,\n              }}\n            />\n          </Grid.Column>\n          <Grid.Column\n            style={columnStyle}\n            align=\"center\"\n            mobile={16}\n            tablet={16}\n            computer={8}\n          >\n            <ContactForm\n              fieldValues={fields}\n              handleSubmit={this.handleSubmit}\n              handleChange={this.handleChange}\n            />\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nfunction ContactForm(props) {\n  const { handleChange, handleSubmit, fieldValues } = props;\n  const {\n    firstName, lastName, website, company, email, budget, location, about,\n  } = fieldValues;\n  return (\n    <div style={{ maxWidth: '400px' }}>\n      <Header color=\"green\" align=\"left\">\n        Contact us\n      </Header>\n      <Form>\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <Form.Input\n              onChange={handleChange}\n              placeholder=\"First Name\"\n              name=\"firstName\"\n              value={firstName}\n              required\n            />\n          </Form.Field>\n          <Form.Field>\n            <Form.Input\n              onChange={handleChange}\n              placeholder=\"Last Name\"\n              name=\"lastName\"\n              value={lastName}\n              required\n            />\n          </Form.Field>\n        </Form.Group>\n        <Form.Field>\n          <Form.Input\n            onChange={handleChange}\n            placeholder=\"Email\"\n            name=\"email\"\n            value={email}\n            required\n          />\n        </Form.Field>\n        <Form.Field>\n          <Form.Input\n            onChange={handleChange}\n            placeholder=\"Company Name\"\n            name=\"company\"\n            value={company}\n            required\n          />\n        </Form.Field>\n        <Form.Field>\n          <Form.Input\n            onChange={handleChange}\n            placeholder=\"Company Website\"\n            name=\"website\"\n            value={website}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Form.Input\n            onChange={handleChange}\n            placeholder=\"Where would you like to shoot your video?\"\n            name=\"location\"\n            value={location}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Form.Input\n            onChange={handleChange}\n            placeholder=\"What is your estimated budget range?\"\n            name=\"budget\"\n            value={budget}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Form.TextArea\n            onChange={handleChange}\n            placeholder=\"Anything about this project you would like us to know before we contact you?\"\n            name=\"about\"\n            value={about}\n          />\n        </Form.Field>\n        <Form.Button\n          fluid\n          color=\"green\"\n          content=\"SUBMIT\"\n          onClick={handleSubmit}\n        />\n      </Form>\n    </div>\n  );\n}\n\nfunction ConfirmationModal(props) {\n  const { open, onConfirm, onClick } = props;\n  return (\n    <Modal open={open} basic size=\"small\" onClick={onClick}>\n      <Header icon=\"checkmark\" content=\"Thank you for your request\" />\n      <Modal.Content>\n        We will be in touch soon!\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"green\" inverted onClick={onConfirm}>\n          CONFIRM\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nfunction ProjectDetails(props) {\n  const { title, description, ...visualProps } = props;\n  return (\n    <div style={{ maxWidth: '500px' }}>\n      <Header color=\"green\" align=\"left\">\n        { title }\n      </Header>\n      <VisualComponent {...visualProps}/>\n      <i>\n        { description }\n      </i>\n    </div>\n  );\n}\n\nfunction VisualComponent(props) {\n  const { exampleUrl, exampleThumb } = props;\n  const componentStyle = { marginBottom: '20px' };\n  if (exampleUrl) {\n    return <Embed url={exampleUrl} placeholder={exampleThumb} style={componentStyle} /> ;\n  }\n  return <Image src={exampleThumb} style={componentStyle}/>;\n}\nexport default ContactPage;\n","import React from 'react';\nimport { Image } from 'firstcut-ui';\n\n\n/**\n * Header\n *\n * Header component for the app's layout. Displays the firstcut logo\n */\n\nfunction Header(props) {\n  const logoStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '25px',\n    marginLeft: '20px',\n    marginTop: '20px',\n  };\n  return (\n    <Image src=\"/marketplace.png\" style={logoStyle} />\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport {\n  Router, Switch, Route,\n} from 'react-router-dom';\nimport { ExploreMarketplacePage, ContactPage } from './pages';\nimport Header from './components/header';\nimport Analytics from 'firstcut-analytics';\nimport { createBrowserHistory } from 'history';\n\n// track navigation events\nconst history = createBrowserHistory();\nhistory.listen((location) => {\n   Analytics.trackNavigationEvent(location.pathname);\n });\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    Analytics.init();\n  }\n\n  render (){\n    return (\n        <div style={{ height: '100%' }}>\n          <Header />\n          <Router history={history}>\n            <Switch>\n              <Route\n                path=\"/\"\n                exact\n                name=\"marketplace\"\n                component={ExploreMarketplacePage}\n              />\n              <Route\n                path=\"/contact/:_id\"\n                exact\n                name=\"contact\"\n                render={(props) => {\n                  const { _id } = props.match.params;\n                  return <ContactPage projectId={_id}/>\n                }}\n              />\n            </Switch>\n          </Router>\n        </div>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// const SERVER_ROOT = (process.env.NODE_ENV === 'development') ? 'http://localhost:4000' : 'https://api.firstcut.io';\nconst client = new ApolloClient({\n  // uri: `https://api.firstcut.io/graphql`\n  uri: `http://localhost:4000/graphql`\n});\n\nReactDOM.render((\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n  ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initMixpanel = initMixpanel;\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar Analytics = {\n  init: function init() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (options.development) {\n      window.analyics = {\n        load: function load() {\n          console.log('Analytics load');\n        },\n        page: function page() {\n          console.log('Analytics page');\n        },\n        track: function track() {\n          console.log('Analytics track');\n        },\n        identify: function identify() {\n          console.log('Analytics identify');\n        },\n        group: function group() {\n          console.log('Analytics group');\n        }\n      };\n    } else if (!window.analytics) {\n      initMixpanel();\n    }\n\n    window.analytics.load('q7fljn00pJH2VTzpOAv08t2AH5d2tfFy');\n  },\n  trackError: function trackError(data) {\n    this.track('Error', data);\n  },\n  trackFormSubmission: function trackFormSubmission(data) {\n    var projectId = data.projectId,\n        projectTitle = data.projectTitle,\n        rest = (0, _objectWithoutProperties2.default)(data, [\"projectId\", \"projectTitle\"]);\n    var eventName = \"Submitted form for project \".concat(projectTitle);\n    this.track(eventName, rest);\n  },\n  trackClickEvent: function trackClickEvent(data) {\n    var name = data.name,\n        rest = (0, _objectWithoutProperties2.default)(data, [\"name\"]);\n    var eventName = \"Clicked \".concat(name);\n    this.track(eventName, rest);\n  },\n  trackNavigationEvent: function trackNavigationEvent(name) {\n    window.analytics.page(name);\n  },\n  track: function track(name, data) {\n    window.analytics.track(name, data);\n  }\n};\n\nfunction initMixpanel() {\n  var analytics = window.analytics = window.analytics || [];\n\n  if (!analytics.initialize) {\n    if (analytics.invoked) window.console && console.error && console.error('Segment snippet included twice.');else {\n      analytics.invoked = !0;\n      analytics.methods = ['trackSubmit', 'trackClick', 'trackLink', 'trackForm', 'pageview', 'identify', 'reset', 'group', 'track', 'ready', 'alias', 'debug', 'page', 'once', 'off', 'on'];\n\n      analytics.factory = function (t) {\n        return function () {\n          var e = Array.prototype.slice.call(arguments);\n          e.unshift(t);\n          analytics.push(e);\n          return analytics;\n        };\n      };\n\n      for (var t = 0; t < analytics.methods.length; t++) {\n        var e = analytics.methods[t];\n        analytics[e] = analytics.factory(e);\n      }\n\n      analytics.load = function (t, e) {\n        var n = document.createElement('script');\n        n.type = 'text/javascript';\n        n.async = !0;\n        n.src = \"https://cdn.segment.com/analytics.js/v1/\".concat(t, \"/analytics.min.js\");\n        var a = document.getElementsByTagName('script')[0];\n        a.parentNode.insertBefore(n, a);\n        analytics._loadOptions = e;\n      };\n\n      analytics.SNIPPET_VERSION = '4.1.0';\n    }\n  }\n\n  return analytics;\n}\n\nvar _default = Analytics;\nexports.default = _default;"],"sourceRoot":""}